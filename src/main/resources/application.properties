server.port= 8080

spring.thymeleaf.prefix= classpath:/templates/

#spring.datasource.druid.driver-class-name=org.mysql.Driver
#spring.datasource.druid.url=jdbc:postgresql://localhost:3306/nacos
#spring.datasource.druid.username=root
#spring.datasource.druid.password=root123456!

spring.datasource.druid.driver-class-name=org.postgresql.Driver
spring.datasource.druid.url=jdbc:postgresql://localhost:5433/postgres
spring.datasource.druid.username=postgres
spring.datasource.druid.password=postgres
###  数据源类别阿里巴巴的DruidDataSource
#spring.datasource.druid.type=com.alibaba.druid.pool.DruidDataSource
### 初始化大小，最小，最大
spring.datasource.druid.initial-size=10
spring.datasource.druid.min-idle=8
#spring.datasource.druid.max-idle=8
#最大连接池数量
spring.datasource.druid.max-active=20
### 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.minEvictableIdleTimeMillis=300000

#获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁
spring.datasource.druid.maxWait=60000
#有两个含义：#1) Destroy线程会检测连接的间隔时间2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
#用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效，做了(true)这个配置会降低性能。
spring.datasource.druid.testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.druid.testOnReturn=false
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
spring.datasource.druid.poolPreparedStatements=true

spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
#属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat日志用的filter:log4j2防御sql注入的filter:wall
spring.datasource.druid.filters=stat,wall,log4j2
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

spring.session.store-type=redis
server.servlet.session.timeout= 30m
  # Sessions flush mode.
spring.session.redis.flush-mode=on_save

spring.session.redis.namespace=spring:session # Namespace for keys used to store sessions.
#spring.datasource.url=jdbc:postgresql://localhost:5433/postgres
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.datasource.driverClassName=org.postgresql.Driver

#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.hbm2ddl.auto=update
# Redis server host.
spring.redis.host=127.0.0.1
# Login password of the redis server.
#spring.redis.password=123
spring.redis.port=6379
# Redis server port.